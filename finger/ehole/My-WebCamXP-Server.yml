name: fingerprint-yaml-My-WebCamXP-Server
manual: false
detail:
    fingerprint:
        name: My-WebCamXP-Server
    fofa: 'body="<html><head><title>my webcamXP server!</title>" || body="<h1><span>webcamXP 5</span></h1>" || body="newWindow = window.open(camstr, winstr, \"toolbar=no,location=no,status=no,menubar=no,scrollbars=no,resizable=no,width=\" + width + \",height=\" + height);" || body="<br><br><table border=\"1\" cellpadding=\"0\" cellspacing=\"0\" bordercolor=\"#579A48\"><tr><td><a href=\"http://www.webcamXP.com\"><img src=\"http://www.darkwet.net/banners/webcamxp2.gif\" width=\"88\" height=\"31\" border=\"0\"></a>" || body="<html><head><title>webcamXP :: unauthorized access</title></head>"'
transport: http
rules:
    r0:
        request:
            cache: true
            method: GET
            path: /
            follow_redirects: true
        expression: response.body_string.contains("<html><head><title>my webcamXP server!</title>")
    r1:
        request:
            cache: true
            method: GET
            path: /
            follow_redirects: true
        expression: response.body_string.contains("<h1><span>webcamXP 5</span></h1>")
    r2:
        request:
            cache: true
            method: GET
            path: /
            follow_redirects: true
        expression: response.body_string.contains('newWindow = window.open(camstr, winstr, "toolbar=no,location=no,status=no,menubar=no,scrollbars=no,resizable=no,width=" + width + ",height=" + height);')
    r3:
        request:
            cache: true
            method: GET
            path: /
            follow_redirects: true
        expression: response.body_string.contains('<br><br><table border="1" cellpadding="0" cellspacing="0" bordercolor="#579A48"><tr><td><a href="http://www.webcamXP.com"><img src="http://www.darkwet.net/banners/webcamxp2.gif" width="88" height="31" border="0"></a>')
    r4:
        request:
            cache: true
            method: GET
            path: /
            follow_redirects: true
        expression: 'response.body_string.contains("<html><head><title>webcamXP :: unauthorized access</title></head>")'
expression: r0() || r1() || r2() || r3() || r4()
