name: fingerprint-yaml-ThinkCMF
manual: false
detail:
    fingerprint:
        name: ThinkCMF
    fofa: 'body="content=\"thinkcmf" && body="http://www.thinkcmf.com\" target=\"_blank\">thinkcmf</a>" || header="x-powered-by: thinkcmf" || header="ThinkCMF" || body="made by <a href=\"http://www.thinkcmf.com\" target=\"_blank\">thinkcmf</a>" || body="content=\"thinkcmf" || body="http://www.thinkcmf.com\" target=\"_blank\">thinkcmf</a>" || title="ThinkCMF"'
transport: http
rules:
    r0:
        request:
            cache: true
            method: GET
            path: /
            follow_redirects: true
        expression: response.body_string.contains('content="thinkcmf') && response.body_string.contains('http://www.thinkcmf.com" target="_blank">thinkcmf</a>')
    r1:
        request:
            cache: true
            method: GET
            path: /
            follow_redirects: true
        expression: 'response.raw_header.bcontains(bytes("x-powered-by: thinkcmf"))'
    r2:
        request:
            cache: true
            method: GET
            path: /
            follow_redirects: true
        expression: response.raw_header.bcontains(bytes("ThinkCMF"))
    r3:
        request:
            cache: true
            method: GET
            path: /
            follow_redirects: true
        expression: response.body_string.contains('made by <a href="http://www.thinkcmf.com" target="_blank">thinkcmf</a>')
    r4:
        request:
            cache: true
            method: GET
            path: /
            follow_redirects: true
        expression: response.body_string.contains('content="thinkcmf')
    r5:
        request:
            cache: true
            method: GET
            path: /
            follow_redirects: true
        expression: response.body_string.contains('http://www.thinkcmf.com" target="_blank">thinkcmf</a>')
    r6:
        request:
            cache: true
            method: GET
            path: /
            follow_redirects: true
        expression: response.title_string.contains("ThinkCMF")
expression: r0() || r1() || r2() || r3() || r4() || r5() || r6()
